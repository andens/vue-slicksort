{"version":3,"file":"vue-slicksort.min.js","sources":["../src/ElementMixin.js","../src/Manager.js","../src/utils.js","../src/ContainerMixin.js","../src/components.js","../src/HandleDirective.js"],"sourcesContent":["// Export Sortable Element Component Mixin\nexport const ElementMixin = {\n  inject: ['manager'],\n  props: {\n    index: {\n      type: Number,\n      required: true,\n    },\n    collection: {\n      type: [String, Number],\n      default: 'default',\n    },\n    disabled: { \n      type: Boolean, \n      default: false,\n    },\n  },\n\n  mounted() {\n    const {collection, disabled, index} = this.$props;\n\n    if (!disabled) {\n      this.setDraggable(collection, index);\n    }\n  },\n\n  watch: {\n    index(newIndex) {\n      if (this.$el && this.$el.sortableInfo) {\n        this.$el.sortableInfo.index = newIndex;\n      }\n    },\n    disabled(isDisabled) {\n      if (isDisabled) {\n        this.removeDraggable(this.collection);\n      } else {\n        this.setDraggable(this.collection, this.index);\n      }\n    },\n    collection(newCollection, oldCollection) {\n      this.removeDraggable(oldCollection);\n      this.setDraggable(newCollection, this.index);\n    },\n  },\n\n  beforeDestroy() {\n    const {collection, disabled} = this;\n\n    if (!disabled) this.removeDraggable(collection);\n  },\n  methods: {\n    setDraggable(collection, index) {\n      const node = this.$el;\n  \n      node.sortableInfo = {\n        index,\n        collection,\n        manager: this.manager,\n      };\n  \n      this.ref = {node};\n      this.manager.add(collection, this.ref);\n    },\n  \n    removeDraggable(collection) {\n      this.manager.remove(collection, this.ref);\n    },\n  },\n};\n","export default class Manager {\n  constructor() {\n    this.refs = {};\n  }\n\n  add(collection, ref) {\n    if (!this.refs[collection]) {\n      this.refs[collection] = [];\n    }\n\n    this.refs[collection].push(ref);\n  }\n\n  remove(collection, ref) {\n    const index = this.getIndex(collection, ref);\n\n    if (index !== -1) {\n      this.refs[collection].splice(index, 1);\n    }\n  }\n\n  isActive() {\n    return this.active;\n  }\n\n  getActive() {\n    return this.refs[this.active.collection].find(({node}) => node.sortableInfo.index == this.active.index);\n  }\n\n  getIndex(collection, ref) {\n    return this.refs[collection].indexOf(ref);\n  }\n\n  getOrderedRefs(collection = this.active.collection) {\n    return this.refs[collection].sort((a, b) => {\n      return a.node.sortableInfo.index - b.node.sortableInfo.index;\n    });\n  }\n}\n","export function arrayMove(arr, previousIndex, newIndex) {\n  const array = arr.slice(0);\n  if (newIndex >= array.length) {\n    let k = newIndex - array.length;\n    while (k-- + 1) {\n      array.push(undefined);\n    }\n  }\n  array.splice(newIndex, 0, array.splice(previousIndex, 1)[0]);\n  return array;\n}\n\nexport const events = {\n  start: ['touchstart', 'mousedown'],\n  move: ['touchmove', 'mousemove'],\n  end: ['touchend', 'touchcancel', 'mouseup'],\n};\n\nexport const vendorPrefix = (function() {\n  if (typeof window === 'undefined' || typeof document === 'undefined') return ''; // server environment\n  // fix for:\n  //    https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n  //    window.getComputedStyle() returns null inside an iframe with display: none\n  // in this case return an array with a fake mozilla style in it.\n  const styles = window.getComputedStyle(document.documentElement, '') || ['-moz-hidden-iframe'];\n  const pre = (Array.prototype.slice.call(styles).join('').match(/-(moz|webkit|ms)-/) || (styles.OLink === '' && ['', 'o']))[1];\n\n  switch (pre) {\n    case 'ms':\n      return 'ms';\n    default:\n      return pre && pre.length ? pre[0].toUpperCase() + pre.substr(1) : '';\n  }\n})();\n\nexport function closest(el, fn) {\n  while (el) {\n    if (fn(el)) return el;\n    el = el.parentNode;\n  }\n}\n\nexport function limit(min, max, value) {\n  if (value < min) {\n    return min;\n  }\n  if (value > max) {\n    return max;\n  }\n  return value;\n}\n\nfunction getCSSPixelValue(stringValue) {\n  if (stringValue.substr(-2) === 'px') {\n    return parseFloat(stringValue);\n  }\n  return 0;\n}\n\nexport function getElementMargin(element) {\n  const style = window.getComputedStyle(element);\n\n  return {\n    top: getCSSPixelValue(style.marginTop),\n    right: getCSSPixelValue(style.marginRight),\n    bottom: getCSSPixelValue(style.marginBottom),\n    left: getCSSPixelValue(style.marginLeft),\n  };\n}\n","import Manager from './Manager';\nimport {\n  closest,\n  events,\n  vendorPrefix,\n  limit,\n  getElementMargin,\n  arrayMove,\n} from './utils';\n\n// Export Sortable Container Component Mixin\nexport const ContainerMixin = {\n  data() {\n    return {\n      sorting: false,\n      sortingIndex: null,\n      manager: new Manager(),\n      events: {\n        start: this.handleStart,\n        move: this.handleMove,\n        end: this.handleEnd,\n      },\n      // Tracker data used by the `updated` lifecycle hook to transition the\n      // dragged item into place when sorting ends.\n      lastSortEndEventParams: null,\n    };\n  },\n\n  props: {\n    value:                      { type: Array,   required: true },\n    axis:                       { type: String,  default: 'y' }, // 'x', 'y', 'xy'\n    distance:                   { type: Number,  default: 0 },\n    pressDelay:                 { type: Number,  default: 0 },\n    pressThreshold:             { type: Number,  default: 5 },\n    useDragHandle:              { type: Boolean, default: false },\n    useWindowAsScrollContainer: { type: Boolean, default: false },\n    hideSortableGhost:          { type: Boolean, default: true },\n    lockToContainerEdges:       { type: Boolean, default: false },\n    lockOffset:                 { type: [String, Number, Array], default: '50%' },\n    transitionDuration:         { type: Number,  default: 300 },\n    draggedSettlingDuration:    { type: Number,  default: 300 },\n    appendHelperToContainer:    { type: Boolean, default: false },\n    lockAxis: String,\n    helperClass: String,\n    contentWindow: Object,\n    shouldCancelStart: { \n      type: Function, \n      default: (e) => {\n        // Cancel sorting if the event target is an `input`, `textarea`, `select` or `option`\n        const disabledElements = ['input', 'textarea', 'select', 'option', 'button'];\n        return disabledElements.indexOf(e.target.tagName.toLowerCase()) !== -1;\n      },\n    },\n    getHelperDimensions: { \n      type: Function,\n      default: ({node}) => ({\n        width: node.offsetWidth,\n        height: node.offsetHeight,\n      }),\n    },\n  },\n\n  provide() {\n    return {\n      manager: this.manager,\n    };\n  },\n\n  mounted() {\n    this.container = this.$el;\n    this.document = this.container.ownerDocument || document;\n    this._window = this.contentWindow || window;\n    this.scrollContainer = this.useWindowAsScrollContainer\n      ? this.document.body\n      : this.container;\n\n    for (const key in this.events) {\n      if (this.events.hasOwnProperty(key)) {\n        events[key].forEach(eventName =>\n          this.container.addEventListener(eventName, this.events[key], false)\n        );\n      }\n    }\n  },\n\n  updated() {\n    this.$nextTick(() => {\n      // Transition the dragged item into place\n      if (this.lastSortEndEventParams && this.$props.draggedSettlingDuration) {\n        // If draggable items are added with v-for, Vue either rearranges or\n        // patches DOM nodes in place according to the key. The sortableInfo\n        // index is consulted to know which node to translate.\n        let nodes = this.manager.refs[this.lastSortEndEventParams.collection];\n        let oldIndexNode = nodes[this.lastSortEndEventParams.oldIndex].node;\n        let el = null;\n        if (oldIndexNode.sortableInfo.index === this.lastSortEndEventParams.newIndex) {\n          el = oldIndexNode;\n        } else {\n          el = nodes[this.lastSortEndEventParams.newIndex].node;\n        }\n\n        // The dragged item begins where the helper ended\n        el.style[\n          `${vendorPrefix}Transform`\n        ] = `translate3d(${this.lastSortEndEventParams.translate.x}px,${this.lastSortEndEventParams.translate.y}px, 0)`;\n\n        // Force browser recalculation to reset transition\n        el.getBoundingClientRect();\n\n        // Transition into place\n        el.style[`${vendorPrefix}Transform`] = 'translate3d(0, 0, 0)';\n        el.style[\n          `${vendorPrefix}TransitionDuration`\n        ] = `${this.$props.draggedSettlingDuration}ms`;\n\n        // Register an event handler to clean up styles when the transition\n        // finishes.\n        el.addEventListener(\"transitionend\", event => {\n          if (event.propertyName === \"transform\") {\n            el.style[`${vendorPrefix}Transform`] = '';\n            el.style[`${vendorPrefix}TransitionDuration`] = '';\n          }\n        }, {\n          once: true,\n        });\n      }\n\n      this.lastSortEndEventParams = null;\n    });\n  },\n\n  beforeDestroy() {\n    for (const key in this.events) {\n      if (this.events.hasOwnProperty(key)) {\n        events[key].forEach(eventName =>\n          this.container.removeEventListener(eventName, this.events[key])\n        );\n      }\n    }\n  },\n\n  methods: {\n\n    handleStart(e) {\n      const {distance, shouldCancelStart} = this.$props;\n\n      if (e.button === 2 || shouldCancelStart(e)) {\n        return false;\n      }\n\n      this._touched = true;\n      this._pos = {\n        x: e.pageX,\n        y: e.pageY,\n      };\n\n      const node = closest(e.target, el => el.sortableInfo != null);\n\n      if (\n        node &&\n        node.sortableInfo &&\n        this.nodeIsChild(node) &&\n        !this.sorting\n      ) {\n        const {useDragHandle} = this.$props;\n        const {index, collection} = node.sortableInfo;\n\n        if (\n          useDragHandle && !closest(e.target, el => el.sortableHandle != null)\n        )\n          return;\n\n        this.manager.active = {index, collection};\n\n        /*\n\t\t\t\t * Fixes a bug in Firefox where the :active state of anchor tags\n\t\t\t\t * prevent subsequent 'mousemove' events from being fired\n\t\t\t\t * (see https://github.com/clauderic/react-sortable-hoc/issues/118)\n\t\t\t\t */\n        if (e.target.tagName.toLowerCase() === 'a') {\n          e.preventDefault();\n        }\n\n        if (!distance) {\n          if (this.$props.pressDelay === 0) {\n            this.handlePress(e);\n          } else {\n            this.pressTimer = setTimeout(\n              () => this.handlePress(e),\n              this.$props.pressDelay\n            );\n          }\n        }\n      }\n    },\n\n    nodeIsChild(node) {\n      return node.sortableInfo.manager === this.manager;\n    },\n\n    handleMove(e) {\n      const {distance, pressThreshold} = this.$props;\n\n      if (!this.sorting && this._touched) {\n        this._delta = {\n          x: this._pos.x - e.pageX,\n          y: this._pos.y - e.pageY,\n        };\n        const delta = Math.abs(this._delta.x) + Math.abs(this._delta.y);\n\n        if (!distance && (!pressThreshold || pressThreshold && delta >= pressThreshold)) {\n          clearTimeout(this.cancelTimer);\n          this.cancelTimer = setTimeout(this.cancel, 0);\n        } else if (distance && delta >= distance && this.manager.isActive()) {\n          this.handlePress(e);\n        }\n      }\n    },\n\n    handleEnd() {\n      const {distance} = this.$props;\n\n      this._touched = false;\n\n      if (!distance) {\n        this.cancel();\n      }\n    },\n\n    cancel() {\n      if (!this.sorting) {\n        clearTimeout(this.pressTimer);\n        this.manager.active = null;\n      }\n    },\n\n    handlePress(e) {\n      const active = this.manager.getActive();\n\n      if (active) {\n        const {\n          axis,\n          getHelperDimensions,\n          helperClass,\n          hideSortableGhost,\n          useWindowAsScrollContainer,\n        } = this.$props;\n        const {node, collection} = active;\n        const {index} = node.sortableInfo;\n        const margin = getElementMargin(node);\n\n        const containerBoundingRect = this.container.getBoundingClientRect();\n        const dimensions = getHelperDimensions({index, node, collection});\n\n        this.node = node;\n        this.margin = margin;\n        this.width = dimensions.width;\n        this.height = dimensions.height;\n        this.marginOffset = {\n          x: this.margin.left + this.margin.right,\n          y: Math.max(this.margin.top, this.margin.bottom),\n        };\n        this.boundingClientRect = node.getBoundingClientRect();\n        this.containerBoundingRect = containerBoundingRect;\n        this.index = index;\n        this.newIndex = index;\n\n        this._axis = {\n          x: axis.indexOf('x') >= 0,\n          y: axis.indexOf('y') >= 0,\n        };\n        this.offsetEdge = this.getEdgeOffset(node);\n        this.initialOffset = this.getOffset(e);\n        this.initialScroll = {\n          top: this.scrollContainer.scrollTop,\n          left: this.scrollContainer.scrollLeft,\n        };\n\n        this.initialWindowScroll = {\n          top: window.pageYOffset,\n          left: window.pageXOffset,\n        };\n\n        const fields = node.querySelectorAll('input, textarea, select');\n        const clonedNode = node.cloneNode(true);\n        const clonedFields = [\n          ...clonedNode.querySelectorAll('input, textarea, select'),\n        ]; // Convert NodeList to Array\n\n        clonedFields.forEach((field, index) => {\n          if (field.type !== 'file' && fields[index]) {\n            field.value = fields[index].value;\n          }\n        });\n\n        if (this.appendHelperToContainer === true) {\n          this.helper = this.container.appendChild(clonedNode);\n        } else {\n          this.helper = this.document.body.appendChild(clonedNode);\n        }\n\n        this.helper.style.position = 'fixed';\n        this.helper.style.top = `${this.boundingClientRect.top - margin.top}px`;\n        this.helper.style.left = `${this.boundingClientRect.left - margin.left}px`;\n        this.helper.style.width = `${this.width}px`;\n        this.helper.style.height = `${this.height}px`;\n        this.helper.style.boxSizing = 'border-box';\n        this.helper.style.pointerEvents = 'none';\n\n        if (hideSortableGhost) {\n          this.sortableGhost = node;\n          node.style.visibility = 'hidden';\n          node.style.opacity = 0;\n        }\n\n        this.minTranslate = {};\n        this.maxTranslate = {};\n        if (this._axis.x) {\n          this.minTranslate.x = (useWindowAsScrollContainer\n            ? 0\n            : containerBoundingRect.left) -\n            this.boundingClientRect.left -\n            this.width / 2;\n          this.maxTranslate.x = (useWindowAsScrollContainer\n            ? this._window.innerWidth\n            : containerBoundingRect.left + containerBoundingRect.width) -\n            this.boundingClientRect.left -\n            this.width / 2;\n        }\n        if (this._axis.y) {\n          this.minTranslate.y = (useWindowAsScrollContainer\n            ? 0\n            : containerBoundingRect.top) -\n            this.boundingClientRect.top -\n            this.height / 2;\n          this.maxTranslate.y = (useWindowAsScrollContainer\n            ? this._window.innerHeight\n            : containerBoundingRect.top + containerBoundingRect.height) -\n            this.boundingClientRect.top -\n            this.height / 2;\n        }\n\n        if (helperClass) {\n          this.helper.classList.add(...helperClass.split(' '));\n        }\n\n        this.listenerNode = e.touches ? node : this._window;\n        events.move.forEach(eventName =>\n          this.listenerNode.addEventListener(\n            eventName,\n            this.handleSortMove,\n            false\n          ));\n        events.end.forEach(eventName =>\n          this.listenerNode.addEventListener(\n            eventName,\n            this.handleSortEnd,\n            false\n          ));\n\n        this.sorting = true;\n        this.sortingIndex = index;\n\n        this.$emit('sort-start', {event: e, node, index, collection});\n      }\n    },\n\n    handleSortMove(e) {\n      e.preventDefault(); // Prevent scrolling on mobile\n\n      this.updatePosition(e);\n      this.animateNodes();\n      this.autoscroll();\n\n      this.$emit('sort-move', { event: e });\n    },\n\n    handleSortEnd(e) {\n      const {collection} = this.manager.active;\n\n      // Remove the event listeners if the node is still in the DOM\n      if (this.listenerNode) {\n        events.move.forEach(eventName =>\n          this.listenerNode.removeEventListener(\n            eventName,\n            this.handleSortMove\n          ));\n        events.end.forEach(eventName =>\n          this.listenerNode.removeEventListener(eventName, this.handleSortEnd));\n      }\n\n      if (this.hideSortableGhost && this.sortableGhost) {\n        this.sortableGhost.style.visibility = '';\n        this.sortableGhost.style.opacity = '';\n      }\n\n      const nodes = this.manager.refs[collection];\n      for (let i = 0, len = nodes.length; i < len; i++) {\n        const node = nodes[i];\n        const el = node.node;\n\n        // Clear the cached offsetTop / offsetLeft value\n        node.edgeOffset = null;\n\n        // Remove the transforms / transitions\n        el.style[`${vendorPrefix}Transform`] = '';\n        el.style[`${vendorPrefix}TransitionDuration`] = '';\n      }\n\n      // Calculate the offset of the dropped item from its target position\n      const helperRect = this.helper.getBoundingClientRect();\n      const newIndexNodeRect = nodes[this.newIndex].node.getBoundingClientRect();\n      const translate = {\n        x: this.newIndex > this.index ? helperRect.right - newIndexNodeRect.right : helperRect.left - newIndexNodeRect.left,\n        y: this.newIndex > this.index ? helperRect.bottom - newIndexNodeRect.bottom : helperRect.top - newIndexNodeRect.top,\n      };\n\n      // Remove the helper from the DOM\n      this.helper.parentNode.removeChild(this.helper);\n\n      // Stop autoscroll\n      clearInterval(this.autoscrollInterval);\n      this.autoscrollInterval = null;\n\n      // Update state\n      this.manager.active = null;\n\n      this.sorting = false;\n      this.sortingIndex = null;\n\n      this.lastSortEndEventParams = {\n        event: e,\n        oldIndex: this.index,\n        newIndex: this.newIndex,\n        collection,\n        translate,\n      };\n\n      this.$emit('sort-end', this.lastSortEndEventParams);\n      this.$emit('input', arrayMove(this.value, this.index, this.newIndex));\n\n      this._touched = false;\n    },\n\n    getEdgeOffset(node, offset = {top: 0, left: 0}) {\n      // Get the actual offsetTop / offsetLeft value, no matter how deep the node is nested\n      if (node) {\n        const nodeOffset = {\n          top: offset.top + node.offsetTop,\n          left: offset.left + node.offsetLeft,\n        };\n        if (node.parentNode !== this.container) {\n          return this.getEdgeOffset(node.parentNode, nodeOffset);\n        } else {\n          return nodeOffset;\n        }\n      }\n    },\n\n    getOffset(e) {\n      return {\n        x: e.touches ? e.touches[0].pageX : e.pageX,\n        y: e.touches ? e.touches[0].pageY : e.pageY,\n      };\n    },\n\n    getLockPixelOffsets() {\n      let {lockOffset} = this.$props;\n\n      if (!Array.isArray(this.lockOffset)) {\n        lockOffset = [lockOffset, lockOffset];\n      }\n\n      if (lockOffset.length !== 2) {\n        throw new Error(`lockOffset prop of SortableContainer should be a single value or an array of exactly two values. Given ${lockOffset}`);\n      }\n\n      const [minLockOffset, maxLockOffset] = lockOffset;\n\n      return [\n        this.getLockPixelOffset(minLockOffset),\n        this.getLockPixelOffset(maxLockOffset),\n      ];\n    },\n\n    getLockPixelOffset(lockOffset) {\n      let offsetX = lockOffset;\n      let offsetY = lockOffset;\n      let unit = 'px';\n\n      if (typeof lockOffset === 'string') {\n        const match = /^[+-]?\\d*(?:\\.\\d*)?(px|%)$/.exec(lockOffset);\n\n        if (match === null) {\n          throw new Error(`lockOffset value should be a number or a string of a number followed by \"px\" or \"%\". Given ${lockOffset}`);\n        }\n\n        offsetX = (offsetY = parseFloat(lockOffset));\n        unit = match[1];\n      }\n\n      if (!isFinite(offsetX) || !isFinite(offsetY)) {\n        throw new Error(`lockOffset value should be a finite. Given ${lockOffset}`);\n      }\n\n      if (unit === '%') {\n        offsetX = offsetX * this.width / 100;\n        offsetY = offsetY * this.height / 100;\n      }\n\n      return {\n        x: offsetX,\n        y: offsetY,\n      };\n    },\n\n    updatePosition(e) {\n      const {lockAxis, lockToContainerEdges} = this.$props;\n\n      const offset = this.getOffset(e);\n      const translate = {\n        x: offset.x - this.initialOffset.x,\n        y: offset.y - this.initialOffset.y,\n      };\n      // Adjust for window scroll\n      translate.y -= (window.pageYOffset - this.initialWindowScroll.top);\n      translate.x -= (window.pageXOffset - this.initialWindowScroll.left);\n\n      this.translate = translate;\n\n      if (lockToContainerEdges) {\n        const [minLockOffset, maxLockOffset] = this.getLockPixelOffsets();\n        const minOffset = {\n          x: this.width / 2 - minLockOffset.x,\n          y: this.height / 2 - minLockOffset.y,\n        };\n        const maxOffset = {\n          x: this.width / 2 - maxLockOffset.x,\n          y: this.height / 2 - maxLockOffset.y,\n        };\n\n        translate.x = limit(\n          this.minTranslate.x + minOffset.x,\n          this.maxTranslate.x - maxOffset.x,\n          translate.x\n        );\n        translate.y = limit(\n          this.minTranslate.y + minOffset.y,\n          this.maxTranslate.y - maxOffset.y,\n          translate.y\n        );\n      }\n\n      if (lockAxis === 'x') {\n        translate.y = 0;\n      } else if (lockAxis === 'y') {\n        translate.x = 0;\n      }\n\n      this.helper.style[\n        `${vendorPrefix}Transform`\n      ] = `translate3d(${translate.x}px,${translate.y}px, 0)`;\n    },\n\n    animateNodes() {\n      const {transitionDuration, hideSortableGhost} = this.$props;\n      const nodes = this.manager.getOrderedRefs();\n      const deltaScroll = {\n        left: this.scrollContainer.scrollLeft - this.initialScroll.left,\n        top: this.scrollContainer.scrollTop - this.initialScroll.top,\n      };\n      const sortingOffset = {\n        left: this.offsetEdge.left + this.translate.x + deltaScroll.left,\n        top: this.offsetEdge.top + this.translate.y + deltaScroll.top,\n      };\n      const scrollDifference = {\n        top: (window.pageYOffset - this.initialWindowScroll.top),\n        left: (window.pageXOffset - this.initialWindowScroll.left),\n      };\n      this.newIndex = null;\n\n      for (let i = 0, len = nodes.length; i < len; i++) {\n        const {node} = nodes[i];\n        const index = node.sortableInfo.index;\n        const width = node.offsetWidth;\n        const height = node.offsetHeight;\n        const offset = {\n          width: this.width > width ? width / 2 : this.width / 2,\n          height: this.height > height ? height / 2 : this.height / 2,\n        };\n\n        const translate = {\n          x: 0,\n          y: 0,\n        };\n        let {edgeOffset} = nodes[i];\n\n        // If we haven't cached the node's offsetTop / offsetLeft value\n        if (!edgeOffset) {\n          nodes[i].edgeOffset = (edgeOffset = this.getEdgeOffset(node));\n        }\n\n        // Get a reference to the next and previous node\n        const nextNode = i < nodes.length - 1 && nodes[i + 1];\n        const prevNode = i > 0 && nodes[i - 1];\n\n        // Also cache the next node's edge offset if needed.\n        // We need this for calculating the animation in a grid setup\n        if (nextNode && !nextNode.edgeOffset) {\n          nextNode.edgeOffset = this.getEdgeOffset(nextNode.node);\n        }\n\n        // If the node is the one we're currently animating, skip it\n        if (index === this.index) {\n          if (hideSortableGhost) {\n            /*\n\t\t\t\t\t\t * With windowing libraries such as `react-virtualized`, the sortableGhost\n\t\t\t\t\t\t * node may change while scrolling down and then back up (or vice-versa),\n\t\t\t\t\t\t * so we need to update the reference to the new node just to be safe.\n\t\t\t\t\t\t */\n            this.sortableGhost = node;\n            node.style.visibility = 'hidden';\n            node.style.opacity = 0;\n          }\n          continue;\n        }\n\n        if (transitionDuration) {\n          node.style[\n            `${vendorPrefix}TransitionDuration`\n          ] = `${transitionDuration}ms`;\n        }\n\n        if (this._axis.x) {\n          if (this._axis.y) {\n            // Calculations for a grid setup\n            if (\n              index < this.index &&\n              (\n                ((sortingOffset.left + scrollDifference.left) - offset.width <= edgeOffset.left &&\n                (sortingOffset.top + scrollDifference.top) <= edgeOffset.top + offset.height) ||\n                (sortingOffset.top + scrollDifference.top) + offset.height <= edgeOffset.top\n              )\n            ) {\n              // If the current node is to the left on the same row, or above the node that's being dragged\n              // then move it to the right\n              translate.x = this.width + this.marginOffset.x;\n              if (\n                edgeOffset.left + translate.x >\n                this.containerBoundingRect.width - offset.width\n              ) {\n                // If it moves passed the right bounds, then animate it to the first position of the next row.\n                // We just use the offset of the next node to calculate where to move, because that node's original position\n                // is exactly where we want to go\n                translate.x = nextNode.edgeOffset.left - edgeOffset.left;\n                translate.y = nextNode.edgeOffset.top - edgeOffset.top;\n              }\n              if (this.newIndex === null) {\n                this.newIndex = index;\n              }\n            } else if (\n              index > this.index &&\n              (\n                ((sortingOffset.left + scrollDifference.left) + offset.width >= edgeOffset.left &&\n                (sortingOffset.top + scrollDifference.top) + offset.height >= edgeOffset.top) ||\n                (sortingOffset.top + scrollDifference.top) + offset.height >= edgeOffset.top + height\n              )\n            ) {\n              // If the current node is to the right on the same row, or below the node that's being dragged\n              // then move it to the left\n              translate.x = -(this.width + this.marginOffset.x);\n              if (\n                edgeOffset.left + translate.x <\n                this.containerBoundingRect.left + offset.width\n              ) {\n                // If it moves passed the left bounds, then animate it to the last position of the previous row.\n                // We just use the offset of the previous node to calculate where to move, because that node's original position\n                // is exactly where we want to go\n                translate.x = prevNode.edgeOffset.left - edgeOffset.left;\n                translate.y = prevNode.edgeOffset.top - edgeOffset.top;\n              }\n              this.newIndex = index;\n            }\n          } else {\n            if (\n              index > this.index &&\n              (sortingOffset.left + scrollDifference.left) + offset.width >= edgeOffset.left\n            ) {\n              translate.x = -(this.width + this.marginOffset.x);\n              this.newIndex = index;\n            } else if (\n              index < this.index &&\n              (sortingOffset.left + scrollDifference.left) <= edgeOffset.left + offset.width\n            ) {\n              translate.x = this.width + this.marginOffset.x;\n              if (this.newIndex == null) {\n                this.newIndex = index;\n              }\n            }\n          }\n        } else if (this._axis.y) {\n          if (\n            index > this.index &&\n            (sortingOffset.top + scrollDifference.top) + offset.height >= edgeOffset.top\n          ) {\n            translate.y = -(this.height + this.marginOffset.y);\n            this.newIndex = index;\n          } else if (\n            index < this.index &&\n            (sortingOffset.top + scrollDifference.top) <= edgeOffset.top + offset.height\n          ) {\n            translate.y = this.height + this.marginOffset.y;\n            if (this.newIndex == null) {\n              this.newIndex = index;\n            }\n          }\n        }\n        node.style[`${vendorPrefix}Transform`] = `translate3d(${translate.x}px,${translate.y}px,0)`;\n      }\n\n      if (this.newIndex == null) {\n        this.newIndex = this.index;\n      }\n    },\n\n    autoscroll() {\n      const translate = this.translate;\n      const direction = {\n        x: 0,\n        y: 0,\n      };\n      const speed = {\n        x: 1,\n        y: 1,\n      };\n      const acceleration = {\n        x: 10,\n        y: 10,\n      };\n\n      if (translate.y >= this.maxTranslate.y - this.height / 2) {\n        direction.y = 1; // Scroll Down\n        speed.y = acceleration.y * Math.abs((this.maxTranslate.y - this.height / 2 - translate.y) / this.height);\n      } else if (translate.x >= this.maxTranslate.x - this.width / 2) {\n        direction.x = 1; // Scroll Right\n        speed.x = acceleration.x * Math.abs((this.maxTranslate.x - this.width / 2 - translate.x) / this.width);\n      } else if (translate.y <= this.minTranslate.y + this.height / 2) {\n        direction.y = -1; // Scroll Up\n        speed.y = acceleration.y * Math.abs((translate.y - this.height / 2 - this.minTranslate.y) / this.height);\n      } else if (translate.x <= this.minTranslate.x + this.width / 2) {\n        direction.x = -1; // Scroll Left\n        speed.x = acceleration.x * Math.abs((translate.x - this.width / 2 - this.minTranslate.x) / this.width);\n      }\n\n      if (this.autoscrollInterval) {\n        clearInterval(this.autoscrollInterval);\n        this.autoscrollInterval = null;\n        this.isAutoScrolling = false;\n      }\n\n      if (direction.x !== 0 || direction.y !== 0) {\n        this.autoscrollInterval = setInterval(\n          () => {\n            this.isAutoScrolling = true;\n            const offset = {\n              left: 1 * speed.x * direction.x,\n              top: 1 * speed.y * direction.y,\n            };\n            this.scrollContainer.scrollTop += offset.top;\n            this.scrollContainer.scrollLeft += offset.left;\n            this.translate.x += offset.left;\n            this.translate.y += offset.top;\n            this.animateNodes();\n          },\n          5\n        );\n      }\n    },\n  },\n};\n","import { ElementMixin } from './ElementMixin';\nimport { ContainerMixin } from './ContainerMixin';\n\nexport const SlickList = {\n  name: 'slick-list',\n  mixins: [ ContainerMixin ],\n  render (h) {\n    return h('div', this.$slots.default);\n  },\n};\n\nexport const SlickItem = {\n  name: 'slick-item',\n  mixins: [ ElementMixin ],\n  render (h) {\n    return h('div', this.$slots.default);\n  },\n};\n","// Export Sortable Element Handle Directive\nexport const HandleDirective = {\n  bind(el) {\n    el.sortableHandle = true;\n  },\n};\n"],"names":["ElementMixin","Number","String","Boolean","this","$props","collection","disabled","index","setDraggable","newIndex","$el","sortableInfo","isDisabled","removeDraggable","newCollection","oldCollection","node","manager","ref","add","remove","Manager","refs","push","getIndex","splice","active","find","_this","indexOf","sort","a","b","arrayMove","arr","previousIndex","array","slice","length","k","undefined","events","vendorPrefix","window","document","styles","getComputedStyle","documentElement","pre","Array","prototype","call","join","match","OLink","toUpperCase","substr","closest","el","fn","parentNode","limit","min","max","value","getCSSPixelValue","stringValue","parseFloat","ContainerMixin","handleStart","handleMove","handleEnd","type","required","default","Object","Function","e","target","tagName","toLowerCase","offsetWidth","offsetHeight","container","ownerDocument","_window","contentWindow","scrollContainer","useWindowAsScrollContainer","body","key","hasOwnProperty","forEach","addEventListener","eventName","$nextTick","_this2","lastSortEndEventParams","draggedSettlingDuration","nodes","oldIndexNode","oldIndex","style","translate","x","y","getBoundingClientRect","event","propertyName","_this3","removeEventListener","distance","shouldCancelStart","button","_touched","_pos","pageX","pageY","nodeIsChild","sorting","useDragHandle","sortableHandle","preventDefault","pressDelay","handlePress","pressTimer","setTimeout","_this4","pressThreshold","_delta","delta","Math","abs","isActive","cancelTimer","cancel","element","getActive","axis","getHelperDimensions","helperClass","hideSortableGhost","margin","marginTop","marginRight","marginBottom","marginLeft","containerBoundingRect","dimensions","width","height","marginOffset","left","right","top","bottom","boundingClientRect","_axis","offsetEdge","getEdgeOffset","initialOffset","getOffset","initialScroll","scrollTop","scrollLeft","initialWindowScroll","pageYOffset","pageXOffset","fields","querySelectorAll","clonedNode","cloneNode","field","appendHelperToContainer","helper","appendChild","position","boxSizing","pointerEvents","sortableGhost","visibility","opacity","minTranslate","maxTranslate","innerWidth","innerHeight","classList","split","listenerNode","touches","move","_this5","handleSortMove","end","handleSortEnd","sortingIndex","$emit","updatePosition","animateNodes","autoscroll","_this6","i","len","edgeOffset","helperRect","newIndexNodeRect","removeChild","autoscrollInterval","offset","nodeOffset","offsetTop","offsetLeft","lockOffset","isArray","Error","minLockOffset","maxLockOffset","getLockPixelOffset","offsetX","offsetY","unit","exec","isFinite","lockAxis","lockToContainerEdges","getLockPixelOffsets","minOffset","maxOffset","transitionDuration","getOrderedRefs","deltaScroll","sortingOffset","scrollDifference","nextNode","prevNode","direction","speed","acceleration","isAutoScrolling","setInterval","SlickList","h","$slots","SlickItem"],"mappings":"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"}